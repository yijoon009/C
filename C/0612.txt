//정수 2개 입력 가로,세로
직사각형 넓이는 []이다.

#include <stdio.h>
int main()
{
	int width, hei;
	printf("가로 길이 입력\n");
	scanf("%d", &width);
	printf("세로 길이 입력\n");
	scanf("%d", &hei); //scanf("%d%d",&x,&y); 가능 
	printf("직사각형 넓이는 %d이다.\n", width*hei);
	return 0;
}
-----------------------------------------------------
정수 2개 입력
7 3 => 몫과 나머지
#include <stdio.h>
int main()
{
	int a, b;
	scanf("%d%d", &a, &b);

	int c = a / b;
	int d = a%b;
	printf("%d 나누기 %d 의 몫은 %d이고, 나머지는 %d이다.\n", a, b, c, d);
	//a,b,a/c,a%d
	return 0;
}
-----------------------------------------------------
증감연산자
#include <stdio.h>
int main()
{
	/*
	int a = 10;
	a = a + 1;
	a += 1; //복합대입연산자
	a++; //증감연산자 1더해줘
	a--; //후위증감연산자 1빼줘 : 연산자 우선순위가 다름!
	++a; //전위증감연산자 =>연산자 우선순위가 매우 빠름
	--a;
	*/

	int a = 10;
	int b = a++;
	printf("a=%d  b=%d\n", a, b);
	b = ++a;
	printf("a=%d  b=%d\n", a, b); //디버깅표 그리기
	return 0;
}

    -----------------------------------------------------
비교연산자
#include <stdio.h>
int main()
{

	int a = 10, b = 20;
	printf("%d \n", a > b);
	printf("%d \n", a >= b); //등호는 항상 부등호보다 뒤에(오른쪽)
	printf("%d \n", a == b);
	printf("%d \n", a != b);
	return 0;
}
    -------------------------------------------------------
논리연산자
	int a = 1, b = 0;
	printf("%d \n", a&&b);	// and, 교집합(그리고),a도 참, b도 참
	printf("%d \n", a||b);	// or, 합집합(또는), a가 참 아니면 b 참
	printf("%d \n", !a);	//a를 반대로 표시해줘
	printf("%d \n", !b);
    ----------------------------------------------------
삼항연산자 ==조건연산자

int a = 10, b = 30;
	int big = a > b ? a : b;

	//A?B:C
	//A에 어떠한 조건식, 참or거짓, A가 참이니? 참이면 B가 리턴, 거짓이면 C
	//위에 식은 항상 큰 수가 나오는 식

	printf("%d \n", big);
    ---------------------------------------------------
정수 3개 입력
가장 작은 정수를 보여줄수있도록 삼항연산자 이용해서 코드 작성

int a, b, c;
	/*printf("세개의 정수 입력:\n");
	scanf("%d", &a);
	scanf("%d", &b);
	scanf("%d", &c);*/
	scanf("%d%d%d", &a, &b, &c);

	int small = a < b ? a : b; //a=a>b?b:a;도 가능

	int smallest = small < c ? small : c;

	printf("%d\n", smallest);
	=======아래 내가혼자한거
	int a, b, c;
	scanf("%d%d%d", &a, &b, &c);
	a = a < b ? a : b;
	a = a < c ? a : c;
	printf("%d", a);
    --------------------------------------------------
비트연산자
int 정수 4byte %d
double 실수(소수점) 8byte %lf
char 문자(단일문자:'a','b','*') 1byte %c

정수 int 4byte==32bit
00000000 00000000 00000000 00001010 =>10을 2진수로표기

비트연산자: & | ^(XOR)(같으면0, 다르면 1리턴) ~(NOT)(반대편에 있는 애)

비트연산자 - 시프트연산자

/*
	int a = 10, b = 11;
	printf("%d\n", a&b); //둘다 1이여야 표기
	printf("%d\n", a|b);
	printf("%d\n", a^b); //같으면0 다르면1
	*/
	/*
	int a = 0;
	int b = -3;
	printf("%d %d\n", ~a, ~b); //0 1 2 3 4
							   //-1 -2 -3 -4
							   */
	int a = 10;
	printf("%d\n", a >> 2); //비트를 오른쪽으로 두칸 이동, 뒤로 10이 빠져서 2
	printf("%d\n", a << 2); //비트 왼쪽으로 두칸이동 101000이 40
/*
5칙연산
복합대입
증감	-> 디버깅표
비교연산
논리연산
삼항연산자
비트연산자
*/
---------------------------------------------------
char 
문자를 정수에 매칭하여서, 매칭된 정수를 이진수로 바꾸어 저장.
A 65	[아스키코드표] A65,a97 숫자정돈 외우자.
B 66
C 67
.
.
.
a 97
b 98
c 99
.
.
.
--------------------------------------------------
char c='A';
	c += 2;
	printf("%c : %d\n", c, c);
--------------------------------------------------
형변환

int i = (int)3.14; //명시적 형변환==강제형변환
	//3.14를 잠시 int로 봐줘, 소수점 뒤를 버린다
	printf("%d\n", i);

	double d = 6; //자동형변환 6.000으로 출력
---------------------------------------------------
	int a = 10, b = 11;
	double m = (a + b) / 2.0; //중간에 자료형 바뀌면 계산식 도중에 2.0으로 넣어줘
	printf("%lf\n", m);
----------------------------------------------------
제어문: 조건문/반복문

int i;
	scanf("%d", &i);
	//분기점을 반들어야 하는 순간에
	//[조건문]을 작성한다

	if (i%2==0) { //중괄호 없으면 바로 아래있는것만 자기것으로 인식
		printf("짝수\n");
	}
	else {
		printf("홀수\n");
	}

	if (i % 6 == 0) {
		printf("6의배수\n");
	}
----------------------------------------------------
	int i;
	scanf("%d", &i);
	
	if (i % 3 == 0) {
		printf("3의배수\n");
	}
	else if (i%3==1){
		printf("3으로 나누었을때 나머지가 1입니다.\n");
	}
	else if (i % 3 == 2) { //else만 냅둬도 돼 괄호없이
		printf("3으로 나누었을때 나머지가 2입니다.\n");
	}
	//중첩은 항상 가능!
----------------------------------------------------
조건문사용
정수3개중에서 가장 큰 정수 출력
 if (a>b && a>c){
printf("%d",a);
}
else if (b>a &&b>c){
printf("%d",b);
}
else {
printf("%d",c);
}

	
	int a, b, c;
	scanf("%d%d%d", &a, &b, &c);
	if (a > b) {
		if (a > c) {
			printf("%d", a);
		}
		else {
			printf("%d", c);
		}
	}
	else {
		if (b > c) {
			printf("%d", b);
		}
		else {
			printf("%d", c);
		}
	}
	printf("\n");
	======내가한거
	int a, b, c;
	scanf("%d%d%d", &a, &b, &c);
	if (a > b) {
		if (a > c) {
			printf("가장큰수 %d", a);
		}
		else {
			printf("가장큰수 %d", c);
		}
	}
	else {
		if (b > c) {
			printf("가장큰수 %d", b);
		}
		else {
			printf("가장큰수 %d", c);
		}
	}

	
---------------------------------------------------
조건문사용
실수1개 입력(3.14, -15.433...)
실수의 절대값을 출력하는 코드 작성
	double d;
	scanf("%lf", &d);
	if (d < 0.0) {
		d *= (-1); // d=d*(-1);
	}
	printf("%lf", d);

	return 0;

-------------------------------------------------
정수 2개
3      40
시간 분
1시간 20분 전 시간을 알려주는 프로그램을 작성.

1~12 / 0분~59분


	int hour, minute;
	scanf("%d%d", &hour, &minute);
	hour--;
	minute -= 20;
	if (m < 10) {
		//-10 ->50
		//-20 ->40
		m += 60;
		h--;
	}
	if (h <= 0) {
		//0 ->12
		//-1 -> 11
		h += 12;
	}
	printf("%d : %d\n", hour, minute);
	=====내가한거
int h, m;
	scanf("%d%d", &h, &m);
	h--;
	m -= 20;
	if (m < 20) {
		//-10=50
		//-20=40
		m += 60;
		h--;
	}
	if (h <= 0) {
		//-1->11
		//0->12
		h += 12;
	}
	printf("%d시%d분\n", h, m);
	return 0;
------------------------------------------------------
논리연산자 && 는 주어진 2개의 논리값이 모두 참(1) 일 때에만 1(참)로 계산하고,
그 외의 경우에는 0(거짓) 으로 계산한다.

논리연산자 || 는 주어진 2개의 논리값 중에 하나라도 참(1) 이면 1(참)로 계산하고,
그 외의 경우에는 0(거짓) 으로 계산한다.

참/거짓이 서로 다를 때에만 참을 출력하는 프로그램을 작성해보자.
이러한 논리연산을 XOR(exclusive or, 배타적 논리합)연산이라고도 부른다.















