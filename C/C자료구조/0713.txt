Dev-C++

포인터
 1. 언제 사용하는가? 1-함수의 인자로 주소를 보낼때.
		2- 외부함수(사용자 정의함수)에서 main()에 영향을 주고싶을때
		3- 함수의 리턴값으로 2개이상을 보내고 싶을때

 가변적인 타입(자료형) -> 포인터
 4-동적할당(동적메모리) 할때 이용
 5-함수의 인자로 배열을 보낼때 사용




swap(a,b);	//값에 의한 호출 call by value
swap(&a,&b);	//참조에 의한 호출 call by adress

#include <stdio.h>
void swap(int *a,int *b) {	//주소를 받았다 ==포인터
	int tmp = *a;
	*a = *b;
	*b = tmp;
}


int main() {

	int a = 10;
	int b = 20;
	printf("%d %d", a, b);
	swap(&a,&b);	//참조에 의한 호출 call by adress
	printf("%d %d", a, b);


	return 0;
}


+++++

//동적할당
#include <stdio.h>
#include <stdlib.h>


int main() {

	int n;
	scanf("%d", &n);
	int *arr = (int *)malloc(n*sizeof(int));	//memory allocate 사용할때 stdlib.h 추가
	//(int *): 형변환
	for (int i = 0; i < n; i++) {
		scanf("%d", &arr[i]);
	}
	for (int i = 0; i < n; i++) {
		printf("%d ", arr[i]);
	}

	return 0;
}


-----

#include <stdio.h>
#include <stdlib.h>

void show(int *arr,int n) {
	for (int i = 0; i < n; i++) {
		printf("%d ", arr[i]);
	}
}
int main() {

	int n;
	scanf("%d", &n);
	int *arr = (int *)malloc(n*sizeof(int));	//memory allocate 사용할때 stdlib.h 추가
	//(int *): 형변환
	for (int i = 0; i < n; i++) {
		scanf("%d", &arr[i]);
	}
	show(arr, n); //arr==&arr[0]

	return 0;
}

//char str[10];
//scanf("%s", str);	//str==&str[0]


+++++


미어캣문제
정수 1개입력받아, 정수만큼의 배열공간 생김 
5
[ _ _ _ _ _ ]
5개 입력[ 3 1 5 2 6 ] 
각 값이 오른쪽을 향해있음
3은 1 5밖에 못봄
2마리 1마리 2 1 0 의 총 합을 출력

#include <stdio.h>
#include <stdlib.h>

int main() {

	 
	for (int i = 0; i < n; i++) {
		scanf("%d", &arr[i]);
	}
	int cnt;
	int sum = 0;
	for (int i = 0; i < n; i++) {
		cnt = 0;	//매번 리셋돼.
		for (int j = i + 1; j < n; j++) {	//j=i+1 나의 기준 오른쪽부터 끝까지
			cnt++;
			if (arr[i] < arr[j]) {
				break;
			}
		}
		sum += cnt;	//리셋되기 전에 더해야해
		printf("%d %d\n", cnt, sum);
	}

	printf("%d", sum);
	

	return 0;
}


+++++


오름차순으로 배열된 숫자들이 입력될때 숫자들간 거리들중 가잘 짧은 거리 출력
(예전에 풀었던 문제)
#include <stdio.h>
#include <stdlib.h>

int main() {

	int n;
	scanf("%d", &n);
	if (n < 2) { 
		printf("ERROR");
		return 0;
	}
	int *arr = (int *)malloc(n*sizeof(int));
	for (int i = 0; i < n; i++) {
		scanf("%d", &arr[i]);
	}
	int min = arr[1] - arr[0];
	for (int i = 0; i < n-1; i++) {
		if (min > arr[i + 1] - arr[i]) {
			min = arr[i + 1] - arr[i];
			printf("%d", min);
		}
		if (arr[i] > arr[i + 1]||arr[i]<0) {
			printf("ERROR\n");
			break;
		}
		
	}
	
	

	return 0;
}


-----

강사님

#include<stdio.h>
#include<stdlib.h>
int main() {

	int n;
	scanf("%d", &n);
	int *arr = (int *)malloc(n * sizeof(int));
	int sw = 0;
	for (int i = 0; i < n; i++) {
		scanf("%d", &arr[i]);
		if (arr[i] < 0) {
			sw = 1;
		}
		if (i!=0 && arr[i] < arr[i - 1]) {
			// 인덱스 구간이 유효한지 확인!!!
			sw = 1;
		}
	}
	if (n < 2) {
		sw = 1;
	}
	if (sw) { // sw==1
		printf("ERROR!\n");
		return 0;
	}
	int min=arr[1]-arr[0]; // [최대값]알고리즘
	for (int i = 0; i < n - 1; i++) {
		if (min > arr[i + 1] - arr[i]) {
			min = arr[i + 1] - arr[i];
		}
	}
	printf("%d", min);

	return 0;
}


+++++


다차원배열==이차원배열 -> 동적할당으로

#include <stdio.h>
#include <stdlib.h>

int main() {

	int a, b;
	scanf("%d%d", &a, &b);
	int **arr = (int **)malloc(a * sizeof(int *));	//세로
	for (int i = 0; i < a; i++) {	// 가로 만들거야
		arr[i] = (int *)malloc(b * sizeof(int));
	}
	//이차원배열 생성완료
	for (int i = 0; i < a; i++) {
		for (int j = 0; j < b; j++) {
			scanf("%d", &arr[i][j]);
		}
	}
	for (int i = 0; i < a; i++) {
		for (int j = 0; j < b; j++) {
			printf("%d ", arr[i][j]);
		}
		printf("\n");
	}
	return 0;
}

+++++

위에서 학생 한명의 평균점수
평균.2lf까지

#include <stdio.h>
#include <stdlib.h>

int main() {

	int a, b;
	scanf("%d%d", &a, &b);
	int **arr = (int **)malloc(a * sizeof(int *));	//세로
	for (int i = 0; i < a; i++) {	// 가로 만들거야
		arr[i] = (int *)malloc(b * sizeof(int));
	}
	//이차원배열 생성완료
	for (int i = 0; i < a; i++) {
		for (int j = 0; j < b; j++) {
			scanf("%d", &arr[i][j]);
		}
	}

	int sum = 0;

		for (int j = 0; j < b; j++) {
			sum += arr[1][j];
		}

	printf("%.2lf", sum*1.0 / b);
	return 0;
}

-----

강사님

#include<stdio.h>
#include<stdlib.h>
int main() {

	// 다차원배열==이차원배열 -> 동적할당
	int a, b;
	scanf("%d%d", &a, &b);
	int **arr = (int **)malloc(a * sizeof(int *));
	for (int i = 0; i < a; i++) {
		arr[i] = (int *)malloc(b * sizeof(int));
	}
	// 이차원배열 생성완료
	for (int i = 0; i < a; i++) {
		for (int j = 0; j < b; j++) {
			scanf("%d", &arr[i][j]);
		}
	}
	for (int i = 0; i < a; i++) {
		printf("%d번 학생의 평균은 ",i+1);
		int sum = 0;
		for (int j = 0; j < b; j++) {
			sum += arr[i][j];
		}
		printf("%.2lf점 입니다.\n",sum*1.0/b);
	}

	return 0;
}

+++++


자료구조&알고리즘
배열,구조체,리스트,스택,큐,트리
교환알고리즘, 최대값, 정렬, 탐색, 순회 . . .

[대용량데이터]를 효과적으로 [탐색]하기위해서, [정렬]해 보관해야한다.

#include<stdio.h>
#include<stdlib.h>
int main() {

	// 자료구조&알고리즘
	// 배열,구조체,리스트,스택,큐,트리
	// 교환,최대값,정렬,탐색,순회

	// [대용량데이터]를 효과적으로 [탐색]하기위해서,
	// [정렬]해 보관해야한다!

	int n;
	scanf("%d", &n);
	int *arr = (int *)malloc(n * sizeof(int));
	for (int i = 0; i < n; i++) {
		scanf("%d", &arr[i]);
	}
	for (int i = 0; i < n; i++) {
		printf("%d ", arr[i]);
	}
	printf("\n");
	// 버블정렬
	for (int a = 0; a < n; a++) {
		for (int x = 0; x < n - 1; x++) {
			// [비교]는 [데이터개수-1]번 수행됨!!!
			if (arr[x] > arr[x + 1]) {
				int tmp = arr[x];
				arr[x] = arr[x + 1];
				arr[x + 1] = tmp;
			}
		}
		for (int i = 0; i < n; i++) {
			printf("%d ", arr[i]);
		}
		printf("\n");
	}
	for (int i = 0; i < n; i++) {
		printf("%d ", arr[i]);
	}
	printf("\n");

	return 0;
}


+++++



0입력하면 종료
1 1 0
-> 2 1
2개의 1이 있었다.

1 2 1 1 0
-> 1 1 1 2 2 1
하나의 1 하나의 2 두개의 1

0 포함해서 10개 초과 입력 안돼
10개까지만 입력함.

<문제풀이>
동적할당 vs 정적할당(굳)
=>입력이 배열이 아니구나~ 하면 (굳)

이전 입력과 이후입력(현재입력)이 같은지/다른지 (굳)
=>분기점이 달라지기 때문.

1- 정적할당입력 -> 배열아닌것으로 출력(굳)
2- 배열입력이 아니구나~ -> for(;;i+=2)도 가능


더 정리해야해<집가서>
#include<stdio.h>
#include<stdlib.h>
int main() {

	int arr[20];
	for (int i = 0;i < 20;i++) {
		scanf("%d", &arr[i]);
		if (arr[i] == 0) {
			break;
		}
	}
	int cnt=0;
	for (int i = 0;i < 19;i++) {
		cnt++;
		if (arr[i] == 0) {
			break;
			return 0;
		}
		if (arr[i] != arr[i + 1]) {
			printf("%d %d ", cnt, arr[i]);
			cnt = 0;
		}
		else {
			i++;
			cnt++;
			printf("%d %d ", cnt, arr[i]);
			cnt = 0;
		}
	}



	return 0;
}





